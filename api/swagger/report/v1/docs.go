// Package v1 Code generated by swaggo/swag. DO NOT EDIT
package v1

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Курмыза Павел",
            "email": "tmrrwnxtsn@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/operation": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Операции"
                ],
                "summary": "Получить список операций по заданным фильтрам",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор специалиста техподдержки",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Код языка, обозначение по RFC 5646",
                        "name": "lang_code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор операции",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор операции на стороне платежной системы",
                        "name": "external_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор клиента",
                        "name": "client_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип операции",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Внутренние статусы операций, перечисленные через запятую",
                        "name": "statuses",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Время создания операции в формате UNIX Timestamp, с которого возвращать результирующие операции",
                        "name": "created_at_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Время создания операции в формате UNIX Timestamp, до которого возвращать результирующие операции",
                        "name": "created_at_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки результирующего списка (по умолчанию - id)",
                        "name": "order_field",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип сортировки (по умолчанию - DESC, по убыванию)",
                        "name": "order_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "$ref": "#/definitions/v1.operationListResponse"
                        }
                    },
                    "default": {
                        "description": "Ответ с ошибкой",
                        "schema": {
                            "$ref": "#/definitions/v1.errorResponse"
                        }
                    }
                }
            }
        },
        "/operation/{id}/external-status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Операции"
                ],
                "summary": "Запросить статус операции на стороне платежной системы",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор операции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Идентификатор специалиста техподдержки",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Код языка, обозначение по RFC 5646",
                        "name": "lang_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "schema": {
                            "$ref": "#/definitions/v1.operationExternalStatusResponse"
                        }
                    },
                    "default": {
                        "description": "Ответ с ошибкой",
                        "schema": {
                            "$ref": "#/definitions/v1.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v1.errorContent": {
            "type": "object",
            "required": [
                "code",
                "description"
            ],
            "properties": {
                "code": {
                    "description": "Код ошибки",
                    "type": "string",
                    "example": "InvalidRequest"
                },
                "description": {
                    "description": "Описание ошибки для разработки",
                    "type": "string",
                    "example": "user_id param is required"
                },
                "message": {
                    "description": "Сообщение об ошибке для клиента",
                    "type": "string",
                    "example": "Internal server error occurred. Please try again later."
                }
            }
        },
        "v1.errorResponse": {
            "type": "object",
            "required": [
                "error",
                "success"
            ],
            "properties": {
                "error": {
                    "description": "Развернутая информация об ошибке",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.errorContent"
                        }
                    ]
                },
                "success": {
                    "description": "Результат обработки запроса (всегда false)",
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "v1.operation": {
            "type": "object",
            "required": [
                "amount",
                "client_id",
                "created_at",
                "currency",
                "id",
                "status",
                "type",
                "updated_at"
            ],
            "properties": {
                "amount": {
                    "description": "Сумма операции",
                    "type": "number",
                    "example": 121.01
                },
                "client_id": {
                    "description": "Идентификатор клиента",
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "description": "Время создания операции в формате UNIX Timestamp",
                    "type": "integer",
                    "example": 1715974447
                },
                "currency": {
                    "description": "Валюта операции",
                    "type": "string",
                    "example": "RUB"
                },
                "external_id": {
                    "description": "Идентификатор операции на стороне платежной системы",
                    "type": "string",
                    "example": "ew01r01w0gfw1fw1"
                },
                "external_status": {
                    "description": "Статус операции на стороне платежной системы",
                    "type": "string",
                    "example": "PENDING"
                },
                "fail_reason": {
                    "description": "Причина отклонения операции",
                    "type": "string",
                    "example": "Technical error"
                },
                "id": {
                    "description": "Идентификатор операции",
                    "type": "integer",
                    "example": 1
                },
                "processed_at": {
                    "description": "Время завершения операции на стороне платежной системы в формате UNIX Timestamp",
                    "type": "integer",
                    "example": 1715974447
                },
                "status": {
                    "description": "Внутренний статус операции",
                    "type": "string",
                    "example": "SUCCESS"
                },
                "tool": {
                    "description": "Платежное средство, используемое в операции",
                    "type": "string",
                    "example": "5748********4124"
                },
                "type": {
                    "description": "Тип операции",
                    "type": "string",
                    "example": "payment"
                },
                "updated_at": {
                    "description": "Время последнего обновления операции в формате UNIX Timestamp",
                    "type": "integer",
                    "example": 1715974447
                }
            }
        },
        "v1.operationExternalStatusResponse": {
            "type": "object",
            "required": [
                "external_status",
                "message",
                "success"
            ],
            "properties": {
                "external_status": {
                    "description": "Статус операции на стороне платежной системы",
                    "type": "string",
                    "example": "PENDING"
                },
                "message": {
                    "description": "Информативное сообщение, описывающее статус транзакции на стороне платежной системы",
                    "type": "string",
                    "example": "Транзакция на стороне ПС еще не имеет конечный статус."
                },
                "success": {
                    "description": "Результат обработки запроса (всегда true)",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "v1.operationListResponse": {
            "type": "object",
            "required": [
                "operations",
                "success"
            ],
            "properties": {
                "operations": {
                    "description": "Массив операций, подходящих под фильтры и условия запроса",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.operation"
                    }
                },
                "success": {
                    "description": "Результат обработки запроса (всегда true)",
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Секретный ключ",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Шлюз финансовой отчетности E-commerce системы",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
